{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/AddMovie.js","components/Movie.js","components/MoviesList.js","App.js","index.js"],"names":["module","exports","AddMovie","props","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","movie","title","current","value","openingText","releaseDate","onAddMovie","className","classes","control","htmlFor","type","id","ref","rows","Movie","MovieList","movies","map","key","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","useCallback","fetch","response","ok","Error","json","data","console","log","loadedMovies","push","message","useEffect","onAddMovieHandler","method","body","JSON","stringify","headers","Fragment","onClick","length","MoviesList","ReactDOM","createRoot","document","getElementById","render"],"mappings":";4HACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,2LCyCjBC,MAtCf,SAAkBC,GAChB,IAAMC,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAgB9B,OACE,0BAAMG,SAfR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMC,EAAQ,CACZC,MAAOR,EAASS,QAAQC,MACxBC,YAAaT,EAAeO,QAAQC,MACpCE,YAAaT,EAAeM,QAAQC,OAGtCX,EAAMc,WAAWN,KAKf,yBAAKO,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,IAAKpB,KAErC,yBAAKc,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUI,KAAK,IAAIF,GAAG,eAAeC,IAAKlB,KAE5C,yBAAKY,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOC,GAAG,OAAOC,IAAKjB,KAEpC,+C,gBCvBSmB,EAVD,SAACvB,GACb,OACE,wBAAIe,UAAWC,IAAQR,OACrB,4BAAKR,EAAMS,OACX,4BAAKT,EAAMa,aACX,2BAAIb,EAAMY,e,gBCWDY,EAfG,SAACxB,GACjB,OACE,wBAAIe,UAAWC,IAAQ,gBACpBhB,EAAMyB,OAAOC,KAAI,SAAClB,GAAD,OAChB,kBAAC,EAAD,CACEmB,IAAKnB,EAAMY,GACXX,MAAOD,EAAMC,MACbI,YAAaL,EAAMK,YACnBD,YAAaJ,EAAMI,mB,+yMC2FdgB,MAlGf,WACE,MAA4BC,mBAAS,IAArC,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAoBC,sBAAW,sBAAC,iGACpCJ,GAAa,GACbE,EAAS,MAF2B,kBAKXG,MACrB,oEANgC,WAK5BC,EAL4B,QASpBC,GAToB,sBAU1B,IAAIC,MAAM,0BAVgB,wBAafF,EAASG,OAbM,QAkBlC,IAAWd,KALLe,EAb4B,OAelCC,QAAQC,IAAIF,GAENG,EAAe,GACHH,EAChBG,EAAaC,KAAK,CAChB1B,GAAIO,EACJlB,MAAOiC,EAAKf,GAAKlB,MACjBG,YAAa8B,EAAKf,GAAKf,YACvBC,YAAa6B,EAAKf,GAAKd,cAI3BiB,EAAUe,GA3BwB,kDAkDlCX,EAAS,KAAMa,SAlDmB,QAoDpCf,GAAa,GApDuB,0DAqDnC,IAEHgB,qBAAU,WACRb,MACC,CAACA,IAEJ,IAAMc,EAAiB,uCAAG,WAAOzC,GAAP,yFACD6B,MACrB,mEACA,CACEa,OAAQ,OACRC,KAAMC,KAAKC,UAAU7C,GACrB8C,QAAS,CACP,eAAgB,sBAPE,cAClBhB,EADkB,gBAYLA,EAASG,OAZJ,OAYlBC,EAZkB,OAaxBC,QAAQC,IAAIF,GAbY,2CAAH,sDAgBvB,OACE,kBAAC,IAAMa,SAAP,KACE,iCACE,kBAAC,EAAD,CAAUzC,WAAYmC,KAExB,iCACE,4BAAQO,QAASrB,GAAjB,iBAEF,kCACIJ,GAAaN,EAAOgC,OAAS,GAAK,kBAACC,EAAD,CAAYjC,OAAQA,KACtDM,GAA8B,GAAjBN,EAAOgC,SAAgBxB,GAAS,+CAC7CF,GAAaE,GAAS,2BAAIA,GAC3BF,GAAa,4CC5FT4B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,kBAAC,EAAD,S","file":"static/js/main.8dab89af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__1fFlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2TCNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__NkYZg\"};","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nimport Movie from \"./Movie\";\nimport classes from \"./MoviesList.module.css\";\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes[\"movies-list\"]}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        \"https://react-http-36f62-default-rtdb.firebaseio.com/movies.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!!\");\n      }\n\n      const data = await response.json();\n\n      console.log(data);\n\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n\n      setMovies(loadedMovies);\n\n      // use .catch() for error if we don't use async await method .. i.e we are using\n      // .then((response)=>{\n      //  return response.json()\n      // }).then((data)=>{\n      //   setMovies(data.results).catch()\n      // }\n\n      // const transformedMovie = data.results.map( movieData => {\n      //   return {\n      //     id : movieData.episode_id,\n      //     title:movieData.title,\n      //     openingText :movieData.opening_crawl,\n      //     releaseData: movieData.release_date\n\n      //   }\n      // })\n      // setMovies(transformedMovie)\n      //or simply change the property\n\n      // setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n\n  const onAddMovieHandler = async (movie) => {\n    const response = await fetch(\n      \"https://react-http-36f62-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={onAddMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length == 0 && !error && <p>no movies found</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}